/* ==================================================
////////////////// HEADER SECTION ///////////////////
================================================== */
.header {
  height: 85vh; /* number * VH means viewport hight */
  background-image: linear-gradient(
  to right bottom,
  rgba($color-primary-light, 0.8),
  rgba($color-primary-dark, 0.8)),
  url('../img/hero-small.jpg'); /* linear gradients allows you to put a mask over the image*/
  background-size: cover; /* cover size try to fit the width box the best it cans */
  background-position: top; /* stay always on top view of the image */

  @supports (clip-path:0 polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* >> x y << Every "," is a line of the box */
    -moz-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* >> x y << Every "," is a line of the box */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* >> x y << Every "," is a line of the box */

    height: 95vh; /* number * VH means viewport hight */
  }

  //Swicth to a better image resolution.
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em), //Standar Apple retina screen.
    only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), //Suppporting Safari.
    only screen and (min-width: 125px) {
    background-image: linear-gradient(
    to right bottom,
    rgba($color-primary-light, 0.8),
    rgba($color-primary-dark, 0.8)),
    url('../img/hero.jpg');
  }

  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%); /* >> x y << Every "," is a line of the box */
    -moz-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%); /* >> x y << Every "," is a line of the box */
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%); /* >> x y << Every "," is a line of the box */
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 4.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%; /* 50% in relation of the parent element */
    transform: translate(-50%, -50%); /* separate his position of the parent element */
    text-align: center;
  }
}
